{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","onChange","type","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","useState","setRobots","setSearchField","count","setCount","useEffect","fetch","then","data","json","d","console","log","filteredRobots","filter","r","toLowerCase","includes","lenght","onClick","event","target","value","ReactDOM","render","document","getElementById"],"mappings":"6MAkBeA,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,iBAA6CG,IAAI,WAEzD,gCACI,6BAAKL,IACL,4BAAIC,WCOLK,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIO,EAAKP,GAAIF,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,OADrCQ,EAAKP,UCKvBS,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIW,SAAUD,EACVV,UAAU,mCACVY,KAAK,SACLC,YAAY,qBCCbC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,OAAQC,OAAQ,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,Y,4BCkBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,6DAGJG,KAAKX,MAAMK,a,GAjBCQ,a,MC2CZC,MAtCf,WAEI,MAA4BC,mBAAS,IAArC,mBAAO1B,EAAP,KAAe2B,EAAf,KACA,EAAqCD,mBAAS,IAA9C,mBAAOrB,EAAP,KAAmBuB,EAAnB,KACA,EAAyBF,mBAAS,GAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAMAC,qBAAU,WACFC,MAAM,8CACLC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAC,OAAIT,EAAUS,MAErBC,QAAQC,IAAIT,KAClB,CAACA,IAEH,IAAMU,EAAiBvC,EAAOwC,QAAO,SAAAC,GAAC,OAAIA,EAAEhD,KAAKiD,cAAcC,SAAStC,EAAYqC,kBACpF,OAAyB,IAAlB1C,EAAO4C,OACV,yCAGI,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,wBAAQiD,QAAS,kBAAMf,EAASD,EAAO,IAAvC,uBACA,cAAC,EAAD,CAAWvB,aApBA,SAACwC,GACpBlB,EAAekB,EAAMC,OAAOC,UAoBpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhD,OAAQuC,Y,MC9B1CU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e09e07a2.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\n\r\nconst Card = ({name, email, id}) => {\r\n  \r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='robots' />\r\n\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card\r\n                            key={user.id}\r\n                            id={user.id} name={user.name} email={user.email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                onChange={searchChange}\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='Search robots' />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'auto', border: '5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n    const [robots, setRobots] = useState([]);\r\n    const [searchfield,setSearchField] = useState('');\r\n    const [count,setCount] = useState(0);\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchField(event.target.value);\r\n    }\r\n\r\n    useEffect(()=>{\r\n            fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(data => data.json())\r\n            .then(d => setRobots(d));\r\n\r\n            console.log(count);\r\n    },[count]) //only run if count chamges.\r\n\r\n    const filteredRobots = robots.filter(r => r.name.toLowerCase().includes(searchfield.toLowerCase()))\r\n    return robots.lenght === 0 ?\r\n        <h1>Loading</h1>\r\n        :\r\n        (\r\n            <div className='tc'>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <button onClick={() => setCount(count +1)}>Click me!</button>\r\n                <SearchBox searchChange={onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}